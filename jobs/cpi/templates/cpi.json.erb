<%=

params = {
  "cloud" => {
    "plugin" => "aws",
    "properties" => {
      "aws" => {
        "credentials_source" => p('aws.credentials_source'),
        "credentials_endpoint" => p('aws.credentials_endpoint', 'http://172.31.55.110:3000/credentials'),
        "access_key_id" => p('aws.access_key_id', nil),
        "secret_access_key" => p('aws.secret_access_key', nil),
        "default_iam_instance_profile" => p('aws.default_iam_instance_profile', nil),
        "default_key_name" => p('aws.default_key_name'),
        "default_security_groups" => p('aws.default_security_groups'),
        "region" => p('aws.region')
      },
      "registry" => {
        "endpoint" => "http://#{p('registry.username')}:#{p('registry.password')}@#{p('registry.host')}:#{p('registry.port')}",
        "user" => p('registry.username'),
        "password" => p('registry.password')
      },

      "agent" => {
        "ntp" => p('ntp')
      }
    }
  }
}

if_p('aws.stemcell.kernel_id') do |kernel_id|
  params["cloud"]["properties"]["stemcell"] = {
    "kernel_id" => kernel_id
  }
end

agent_params = params["cloud"]["properties"]["agent"]

if_p('blobstore') do
  agent_params["blobstore"] = {
       "provider" => p('blobstore.provider'),
       "options" => {}
  }

  blobstore = agent_params["blobstore"]

  if p('blobstore.provider') == "s3"
    blobstore["options"] = {
      "bucket_name" => p('blobstore.bucket_name'),
      "credentials_source" => p(['agent.blobstore.credentials_source', 'blobstore.credentials_source']),
      "access_key_id" => p(['agent.blobstore.access_key_id', 'blobstore.access_key_id'], nil),
      "secret_access_key" => p(['agent.blobstore.secret_access_key', 'blobstore.secret_access_key'], nil),
    }

    if_p('blobstore.use_ssl') do |use_ssl|
      blobstore["options"]["use_ssl"] = use_ssl
    end
    if_p('blobstore.s3_port') do |port|
      blobstore["options"]["port"] = port
    end
    if_p('blobstore.host') do |host|
      blobstore["options"]["host"] = host
    end
    if_p('blobstore.s3_force_path_style') do |s3_force_path_style|
      blobstore["options"]["s3_force_path_style"] = s3_force_path_style
    end
  elsif p('blobstore.provider') == 'local'
    blobstore["options"] = {
      "blobstore_path" => p('blobstore.path')
    }
  else
    blobstore["options"] = {
      "endpoint" => "http://#{p(['agent.blobstore.address', 'blobstore.address'])}:#{p('blobstore.port')}",
      "user" => p('blobstore.agent.user'),
      "password" => p('blobstore.agent.password')
    }
  end
end

if_p('agent.mbus') do |mbus|
  agent_params["mbus"] = mbus
end.else_if_p('nats') do
  agent_params["mbus"] = "nats://#{p('nats.user')}:#{p('nats.password')}@#{p(['agent.nats.address', 'nats.address'])}:#{p('nats.port')}"
end

JSON.dump(params)

%>
